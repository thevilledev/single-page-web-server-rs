name: Release

permissions:
  contents: write
  packages: write

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            asset_name: single-page-web-server-rs-linux-amd64
            binary_name: single-page-web-server-rs
          - target: x86_64-apple-darwin
            os: macos-latest
            asset_name: single-page-web-server-rs-darwin-amd64
            binary_name: single-page-web-server-rs
          - target: aarch64-apple-darwin
            os: macos-latest
            asset_name: single-page-web-server-rs-darwin-arm64
            binary_name: single-page-web-server-rs
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            asset_name: single-page-web-server-rs-windows-amd64.exe
            binary_name: single-page-web-server-rs.exe
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Rename binary
        shell: bash
        run: |
          cd ./target/${{ matrix.target }}/release
          cp "${{ matrix.binary_name }}" "${{ matrix.asset_name }}"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream