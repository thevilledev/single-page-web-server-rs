# Build stage
FROM --platform=$BUILDPLATFORM rust:1.75-slim AS builder
WORKDIR /usr/src/app
RUN set -x && \
    apt-get update && \
    apt-get install -y musl-tools
COPY . .

# Install cross-compilation tools based on target architecture
ARG TARGETARCH
RUN case "${TARGETARCH}" in \
        "amd64")  TARGET="x86_64-unknown-linux-musl" ;; \
        "arm64")  TARGET="aarch64-unknown-linux-musl" ;; \
        *)        TARGET="x86_64-unknown-linux-musl" ;; \
    esac && \
    rustup target add $TARGET

# Build for the target architecture
ARG TARGETARCH
RUN case "${TARGETARCH}" in \
        "amd64")  cargo build --release --target x86_64-unknown-linux-musl ;; \
        "arm64")  cargo build --release --target aarch64-unknown-linux-musl ;; \
        *)        cargo build --release --target x86_64-unknown-linux-musl ;; \
    esac

# Runtime stage
FROM scratch
ARG TARGETARCH
COPY --from=builder /usr/src/app/target/\
$(case "${TARGETARCH}" in \
    "amd64") echo "x86_64-unknown-linux-musl" ;; \
    "arm64") echo "aarch64-unknown-linux-musl" ;; \
    *)       echo "x86_64-unknown-linux-musl" ;; \
esac)/release/single-page-web-server-rs /
COPY index.html /
ENTRYPOINT ["/single-page-web-server-rs"]
CMD ["--addr", "0.0.0.0"]